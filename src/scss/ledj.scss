@-webkit-keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg)
  }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg)
  }
}

@keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg)
  }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg)
  }
}

.ledj-container { margin: 0; }


/*
These sizes are based on bootstrap container sizes.
todo: fix this somehow. I could add a bootstrap class to the parent container that these apply to,
todo: a default sizing thing, and figure out a way to have custom sizes. Manipulating scss variables via JS
todo: would be fantastic but I don't know if that's possible
*/
@media (max-width: 480px) {
  .ledj-link-grid > .link-grid-item { width: 45%; height: auto; }
  .ledj-link-grid > .link-grid-item:nth-child(odd) { float: left; }
  .ledj-link-grid > .link-grid-item:nth-child(even) { float: right; }
  .ledj-link-grid > .link-grid-item span { font-size: 12px; }
}
@media (max-width: 320px) {
  .ledj-link-grid { width: 100%; }
  .ledj-link-grid > .link-grid-item { width: 100%; height: auto;  }
  .ledj-link-grid > .link-grid-item:nth-child(odd),
  .ledj-link-grid > .link-grid-item:nth-child(even) { float: none; }
  .ledj-link-grid > .link-grid-item img { width: 90%; height: auto; }
}
@media (min-width: 480px)  { .ledj-link-grid { width:480px; } }
@media (min-width: 768px)  {
  .ledj-link-grid { width:640px; }
}
@media (min-width: 992px)  { .ledj-link-grid { width:960px;  } }
@media (min-width: 1200px) { .ledj-link-grid { width:1120px; } }





